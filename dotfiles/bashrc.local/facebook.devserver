# .bashrc
# Unlike earlier versions, Bash4 sources your bashrc on non-interactive shells.
# The line below prevents anything in this file from creating output that will
# break utilities that use ssh as a pipe, including git and mercurial.
[ -z "$PS1" ] && return

# Source global definitions
if [ -f /etc/bashrc ]; then
  . /etc/bashrc
fi

# Source Facebook definitions
if [ -f /usr/facebook/ops/rc/master.bashrc ]; then
  . /usr/facebook/ops/rc/master.bashrc
fi

# User specific aliases and functions for all shells

alias l='ls -lah'

alias ..='cd ..'
alias ...='cd ../..'
alias hst='hg status'

alias ssh-auth='eval "$(ssh-agent)" && ssh-add ~/.ssh/id_rsa'

HISTIGNORE="$HISTIGNORE:hst:hh"
function tMeerkat() {
    if [ -p meerkatTestList ]; then
        rm meerkatTestList
    fi
    mkfifo meerkatTestList
    for tt in "$@"; do
        (echo "$tt" >> meerkatTestList &)
        (find flib/__generated__/ -type f -regextype posix-extended -regex ".*${tt}_.*" -exec basename \{} .php \; >> meerkatTestList &)
        (find flib/intern/__generated__/ -type f -regextype posix-extended -regex ".*${tt}_.*" -exec basename \{} .php \; >> meerkatTestList &)
    done
    cat meerkatTestList | uniq | xargs t
    if [ -p meerkatTestList ]; then
        rm meerkatTestList
    fi
}

function dupdate() {
    jf submit --draft
}

function wipcom() {
    hg commit -m "[WIP] $* [WIP]"
}

function rebase_diffs() {
    d="$1"
    for s in "${@:2}"; do
        hg rebase -s "$s" -d "$d";
    done
}

function rebase_all_diffs() {
    hg co remote/master
    arc pull
    current_diff=$(hg sl | grep -o "@\s*[a-zA-Z0-9]*" | grep -o "[a-zA-Z0-9]*")
    diffs_to_rebase=$(hg sl | grep -B 1 "^├─╯\|╭─╯" | grep -o " [ox]  \w* " | grep -o "  [a-zA-Z0-9]*")
    rebase_diffs $current_diff $diffs_to_rebase

}

function format_file() {
    hackfmt --in-place "$1"
}

function format_committed() {
    hg show -X "re:.*codegen" -X "re:.*__generated__" | hackfmt --diff
    clean_dir=`is_clean_dir`
    if [ $clean_dir -ne 1 ]; then
        hg amend
    fi
}

function update_stack() {
    hh && dupdate
    while hg next && sleep 2 && hh && dupdate; do
        echo "Updated diff"
    done
}

function is_clean_dir() {
    hg identify --id | grep --quiet +;
    echo $?;
}

function commit() {
    hg commit -m "$*"
    format_committed
}

function amend() {
    clean_dir=`is_clean_dir`
    if [ $clean_dir -ne 1 ]; then
        hg amend
        format_committed
    fi
}

function tttt() {
    hg identify --id | grep --quiet + ; echo $?
}
